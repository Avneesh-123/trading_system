{"ast":null,"code":"var _jsxFileName = \"/Users/tanwar/Desktop/trading-system/frontend/trading-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst response = await axios.get(`${process.env.REACT_APP_API_URL}/market-data`);\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Use the environment variable for the API URL\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/market-data`);\n        setData(response.data);\n      } catch (error) {\n        console.error('Error fetching market data:', error);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 60000); // Fetch data every minute\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Algorithmic Trading Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Current Price: $\", data.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: data.signal === 'Buy' ? 'green' : data.signal === 'Sell' ? 'red' : 'black'\n        },\n        children: [\"Signal: \", data.signal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"80%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: [{\n            name: 'Short MA',\n            value: data.shortMA\n          }, {\n            name: 'Long MA',\n            value: data.longMA\n          }],\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"value\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","response","get","process","env","REACT_APP_API_URL","App","_s","data","setData","fetchData","error","console","interval","setInterval","clearInterval","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","price","toFixed","color","signal","width","height","name","value","shortMA","longMA","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/Users/tanwar/Desktop/trading-system/frontend/trading-dashboard/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nconst response = await axios.get(`${process.env.REACT_APP_API_URL}/market-data`);\n\nconst App = () => {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Use the environment variable for the API URL\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/market-data`);\n                setData(response.data);\n            } catch (error) {\n                console.error('Error fetching market data:', error);\n            }\n        };\n\n        fetchData();\n        const interval = setInterval(fetchData, 60000); // Fetch data every minute\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n            <h1>Algorithmic Trading Dashboard</h1>\n            {data ? (\n                <>\n                    <h2>Current Price: ${data.price.toFixed(2)}</h2>\n                    <h3 style={{ color: data.signal === 'Buy' ? 'green' : data.signal === 'Sell' ? 'red' : 'black' }}>\n                        Signal: {data.signal}\n                    </h3>\n                    <ResponsiveContainer width=\"80%\" height={300}>\n                        <LineChart data={[{ name: 'Short MA', value: data.shortMA }, { name: 'Long MA', value: data.longMA }]}>\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </>\n            ) : (\n                <p>Loading data...</p>\n            )}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}